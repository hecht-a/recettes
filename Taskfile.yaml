version: '3'

silent: true

includes:
    phpcsfixer:
        taskfile: ./tools/php-cs-fixer/Taskfile.yaml
        dir: ./tools/php-cs-fixer
    phpcs:
        taskfile: ./tools/phpcs/Taskfile.yaml
        dir: ./tools/phpcs
    phpstan:
        taskfile: ./tools/phpstan/Taskfile.yaml
        dir: ./tools/phpstan

env:
    USER_ID: 0
    GROUP_ID: 0
    compose: "USER_ID=0 GROUP_ID=0 docker compose"
    compose_test: "USER_ID=0 GROUP_ID=0 docker compose -f docker-compose.test.yml"
    compose_codestyle_main: "USER_ID=0 GROUP_ID=0 docker compose -f docker-compose.codestyle.yml"
    console: "{{.compose}} exec php php bin/console"

tasks:
    build:
        desc: Build container docker
        cmds:
            - "{{.compose}} build --pull --no-cache"
    up:
        desc: Démarre le container docker
        cmds:
            - "{{.compose}} up --detach"
    start:
        desc: Build et démarre le container docker
        cmds:
            -   task: build
            -   task: up
    down:
        desc: Arrête le container docker
        cmds:
            - "{{.compose}} down --remove-orphans"
    restart:
        desc: Redémarre le container docker
        cmds:
            -   task: down
            -   task: up
    console:
        desc: Symfony console
        cmds:
            - "{{.console}} {{.CLI_ARGS}}"
    compose:
        desc: Docker compose
        cmds:
            - "{{.compose}} {{.CLI_ARGS}}"
    logs:
        desc: Affiche les logs du container docker
        cmds:
            - "{{.compose}} logs --tail=0 --follow"
    format:
        desc: Exécute php-cs-fixer et php_codesniffer
        cmds:
            -   task: phpcsfixer:exec
            -   task: phpcs:exec
    lint:
        desc: Exécute PhpStan
        cmds:
            -   task: phpstan:exec
    grum:
        desc: Exécute GrumPhp
        cmds:
            - vendor/bin/grumphp --config=grumphp.yml run
    fixtures:
        desc: Exécute la commande de chargement des fixtures
        cmds:
            - "{{.console}} hautelook:fixtures:load --no-interaction --no-bundles"
    tests:
        desc: Exécute les tests
        cmds:
            - "{{.compose_test}} run --rm phptest bin/console cache:clear --env=test"
            - "{{.compose_test}} run --rm phptest bin/console doctrine:migrations:migrate --no-interaction --env=test"
            - "{{.compose_test}} run --rm phptest bin/console doctrine:schema:validate --skip-sync"
            - "{{.compose_test}} run --rm phptest vendor/bin/phpunit"
    codestyle:
        desc: Exécute les commandes pour analyser et formater le code
        cmds:
            -   task: lint
            -   task: format
    install:
        desc: Installe les dépendances du projet
        cmds:
            - "{{.compose_codestyle_main}} run --rm phpcodestyle composer install"
